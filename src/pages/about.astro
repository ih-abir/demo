---
import '../styles/global.css';
import '../styles/styles.css';
// Component Imports
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';

import { Markdown } from 'astro/components';

// const path = Astro.site.pathname;
// console.log(Astro.canonicalURL.pathname)

const GqlQuery = `{
  	about{
	    data{
	      	id
	      	attributes{
		        Title
		        Description
		        Hero_image{
		            data{
		                id
		                attributes{
		                    url
		                    alternativeText
		                }
		            }
		        }
		        Images{
		            data{
		                id
		                attributes{
		                    url
		                    alternativeText
		                }
		            }
		        }
		        Title_2
		        Description_2
		        slug
		    }
		}
	}
}`

const url = `${import.meta.env.Assets_URL}`;

const response = await fetch(`${import.meta.env.DB_URL}`,
	{
	    method:'POST',
	    headers: {
	    	'Content-Type':'application/json',
	    	'Authorization': `Bearer ${import.meta.env.ACCESS_TOKEN}`
	    },
	    body: JSON.stringify({
	      query: GqlQuery,
	    })
	});

const data = await response.json();
const parseData = data.data.about.data.attributes;

let title = 'About | NusaCeningan';
---
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width">
	<title>{title}</title>

	<link rel="icon" href="/images/nusa-ceningan-favicon.svg" />
</head>
<body>
	<div class="overflow-hidden">
		<Navbar />
		<main>
			<div class="header">
		    	<div class="wrapper1 z-30 mx-auto grid sm:grid-cols-2 pb-14 md:pb-0 headerContainer">
	    			<div class="col-span-1 sm:col-span-1 px-8 lg:px-3 mx-auto z-30 order-2 sm:order-1 my-auto headerCol1">
	    				<div class="headerContentContainer">
			    			<div class="relative overflow-y-hidden w-full lg:w-10/12 xl:w-7/12 headerH1Container">
			    				<img class="absolute top-5 z-10 h-auto headingBgSm" src="images/txtBg.svg" alt="Background-curve">
			    				<h1 class="headerH1">{parseData.Title}</h1>
			    			</div>
			    			<div class="text-lg leading-8 sm:mb-4 prose prose-a:no-underline prose-a:font-normal max-w-none markdown headerQuote">
			    				<Markdown>
			    					{parseData.Description}
			    				</Markdown>
			    			</div>
	    				</div>
	    			</div>

			    	<div class="col-span-1 sm:col-span-1 order-1 sm:order-2 headerCol2">
		    			<div class="absolute heroCurveContainer">
							<div class="relative">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 622.7 680.5" class="overflow-hidden right-0 heroCurve">
								    <defs>
								        <clipPath id="heroImgFrame">
								            <path class="heroCurvePath" d="M623,0V516.7c-59.6,75.6-130.3,149.2-225.6,162-103.8,14-199.5-56.3-273-131.3S-7.6,377.6,1.1,274.5C9.4,176.8,87.3,103,166.7,46,205.4,18.2,249.3,6.3,295.4,0Z" transform="translate(-0.3)"/>
								        </clipPath>
								    </defs>
								    <image class="h-full object-cover overflow-hidden" xlink:href={url + parseData.Hero_image.data.attributes.url} alt={parseData.Hero_image.data.attributes.alternativeText} clip-path="url(#heroImgFrame)"></image>
								</svg>
							</div>
				    	</div>
					</div>
		    	</div>
		    </div>

		    <div class="bg-lightGreen overflow-x-hidden">
		    	<div class="wrapper mx-auto md:px-2 md:py-10">
		    		<div class="grid-cols-2 md:grid-cols-3 aboutImgGrid">
					  	<div class="col-span-2 md:col-span-1 row-span-2">
					  		<div class="aboutImgContainer h-full w-full">
					  			<img class="h-full w-full object-cover" src={url + parseData.Images.data[0].attributes.url} alt={parseData.Images.data[0].attributes.alternativeText} />
					  		</div>
					  	</div>
					  	<div class="col-span-1">
					  		<div class="aboutImgContainer h-full w-full">
					  			<img class="h-full w-full object-cover" src={url + parseData.Images.data[1].attributes.url} alt={parseData.Images.data[1].attributes.alternativeText} />
					  		</div>
					  	</div>
					 	<div class="col-span-1">
					  		<div class="aboutImgContainer h-full w-full">
					  			<img class="h-full w-full object-cover" src={url + parseData.Images.data[2].attributes.url} alt={parseData.Images.data[2].attributes.alternativeText} />
					  		</div>
					  	</div>
					</div>
				</div>
		    </div>

		    <div class="wrapper overflow-x-hidden mx-auto px-8 md:px-2 py-20 md:py-32">
				<h2 class="font-semibold AboutusTag">{parseData.Title_2}</h2>
				<p class="text-lg leading-8 my-11  prose prose-a:no-underline prose-a:font-normal max-w-none markdown">
					<Markdown>
    					{parseData.Description_2}
    				</Markdown>
				</p>
		    </div>
		</main>
		<Footer />
	</div>
	<script>
		const activePage = window.location.pathname;
		const navLinks = document.querySelectorAll('.navMenuItem a').forEach(link => {
		  if(link.href.includes(`${activePage}`)){
		    link.classList.add('nav-active');
		    link.classList.remove('navAnimation');
		  }
		});

		var h = document.querySelectorAll('.markdown p a');
		 for (var i = 0; i < h.length; i++) {
	        if (h[i].classList.length === 0) {
	            h[i].classList.add("underline-animated");
	        }
	    };

		(function() {
		    var id = 'c7a663ac-d1e9-11ec-a915-0242ac130002';
		    var ci_search = document.createElement('script');
		    ci_search.type = 'text/javascript';
		    ci_search.async = true;
		    ci_search.src = 'https://cse.expertrec.com/api/js/ci_common.js?id=' + id;
		    var s = document.getElementsByTagName('script')[0];
		    s.parentNode.insertBefore(ci_search, s);
		})();

	</script>
</body>
</html>
